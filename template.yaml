AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  Iteration 3 - A simple backend (read/write to DynamoDB) with a RESTful API endpoint using Amazon API Gateway.

Globals:
  #https://github.com/awslabs/serverless-application-model/blob/develop/docs/globals.rst
  Function:
    Runtime: python3.8
    MemorySize: 128
    Environment:
      Variables:
        TABLE_NAME: !Ref Table
        REGION_NAME: !Ref AWS::Region

Resources:
  Api3:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Content-Type'"
        AllowMethods: "'OPTIONS,POST,GET'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer2
        Authorizers:
          CognitoAuthorizer2:
            UserPoolArn: !GetAtt CognitoUserPool2.Arn

  httpendpoint2:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function2.lambda_handler
      CodeUri: src/
      Description: >-
        Iteration 3 - A simple backend (read/write to DynamoDB) with a RESTful API endpoint using Amazon API Gateway.
      Timeout: 3
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref Api3
            Path: /MyResource
            Method: GET

  CognitoUserPool2:
    Type: AWS::Cognito::UserPool
    Properties:
      Policies:
        PasswordPolicy:
          MinimumLength: 6
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false

  CognitoUserPoolClient2:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool2
      GenerateSecret: false
      PreventUserExistenceErrors: ENABLED

  Table:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: info
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
